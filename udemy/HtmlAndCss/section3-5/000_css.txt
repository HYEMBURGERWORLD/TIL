
1. inline css
기본적으로 요소 내부에 (속성 추가로) css 코드를 작성한다.
ex. <h1 style="color:blue">
하지만 절대 사용하지마 ^____^

2. internal css
html 에 head 부분에 <style></style>을 추가하는 방법.
스타일을 분리했다는 점에서 크 ㄴ발전~ 하지만 html 코드와 섞여 어지러질 수 있으므로 (양이 많아지면 많아질수록)
따로 파일을 만들어 코드를 분리하는 것이 바람직하다.

3. external css
따로 css 파일을 분리해서 코드를 관리하는 방법. 
html 파일이 css파일을 인지할 수 있도록 연결해주어야 한다. 
바로 head 부분에!
왜? head 부분은 html 이 필요한 정보를 모아두는 곳이기 때문에. 
link 요소를 사용하여 연결한다. 

같은 요소에 여러번 스타일이 들어가면 어떻게 될까?
그 스타일이 모두 적용된다(중복된 내용은 당연히 한 번만)

id와 class 모두 css에서 사용할 수 있는데 
왜 굳이 class만을 사용하는걸까?
-> 미래를 준비하기 때문이다.  후에 추가하고 싶을 때 변경하고 싶을 때가 생겼다면 id를 모두 class로 변경하고
css 파일에서도 변경해야 한다.
이때 버그가 생길 수도 있기 때문에 미리미리 class만 사용하는 것.

-----

css 에 관한 이론 5가지~!

1. 같은 요소에 적용되는 css 규칙이 여러개일 때
어떤 css 규칙이 적용될까?
-> 모든 css 규칙이 적용된다.
하지만 같은 속성의 선언문이 여러개이고 모두 다르다면 어떤 거승 ㄹ적용할까?
(예를들어, 폰트사이즈를 각자 다르게 선언하고 있다면??)
상충하는 선언의 경우 어떻게 될까?
!important (가장 중요한 선택자. css 내 갈등이 생겼을 때 마지막 수단으로 사용한다. 보통 사용하지 않고 정말 마지막 수단이라는 느낌.)
inline style (html 태그에 style 속성을 사용하는 것) ->  실제로는 사용하면 안되니까 논외라고 치자~ 하지만 알아둘것
id선택자
class 혹은 의사클래스
요소 선택자(p, div, li ...)
* 선택자
css는 이러한 순서로 중요하다고 생각한다. (상충하는 선언이 생길 때에만 적용)


2. body selector, * selector
css 파일에 주석으로 적음

3. box 모델
웹페이지의 모든 요소를 박스로 보고
박스마다 내용물, 테두리, 안팎의 공간이 있다는 것.

- content : text, image, list, ... etc
- border : 테두리. 아직 박스 모델의 안에 위치한다
- padding : 콘텐츠와 테두리 사이에 있는 여백
- margin : 박스 주변에 여백을 만든다. 두 박스모델 요소 간의 여백을 만들기 위해 사용하기 (요소의 바깥쪽)
===> 원하는 레이아웃에 따라 옵션

최종 요소의 너비, 높이는 콘텐츠영역의 너비 높이와 패딩영역의 너비 높이를 모두 합친 숫자가 된다.(기본)
하지만 이것도.. 변경 가능!?

축소여백 : 같은 공간을 차지하는 여백이 2개일 때 둘이 합쳐지는 게 아니라 둘 중 더 큰쪽의 여백만 적용된다.

4. 다양한 유형의 박스로
- 콘텐츠만 딱 알맞게 담은 상자 : 인라인 박스
- p나 h3 같은 박스는 블록레벨 요소 블록레벨박스
공간을 최대한 차지하고 라인브레이크 만듬(다른 상자와 나란히 있을 수 없다)
대부분의 요소가 블록 레벨 요소이지만, 그렇지 않은 경우(인라인) css에서 display를 사용하여 바꿀 수 있다. (당연히 반대도 가능)

인라인 요소
추가적인 공간을 만들지 않고 담겨있는 콘텐츠에 딱 맞는 공간만을 만든다.
높이, 너비 속성은 아무 효과도 없다.
박스 모델의 특정 속성이 인라인 요소에 적용했을 때 작동되지 않을 수 있다는 것.

예를들어 padding을 추가한다 하더라도
뭔가 커져 보이지만, 실제로 공간을 새로이 추가하거나 만들지 않는다는 걸 알 수 있다.

인라인 + 블록 = 인라인블록
외관은 인라인
안은 블록 요소처럼 작동
인라인 요소처럼 나란히 둘 수 있고 필요한 공간만을 가진다.
블록 요소처럼 padding, margin등 새로운 공간을 만들 수 있다.

5. 위치설정
일반적인 흐름(위치)
relative

절대위치설정 (어디든 원하는 곳에)
absolute
겹칠 수도 있고 밖에 내보낼 수도 있고 ...
위, 아래, 왼, 오른쪽으로 설정할 수 있다. 


---

